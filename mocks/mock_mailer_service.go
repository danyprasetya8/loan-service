// Code generated by MockGen. DO NOT EDIT.
// Source: loan-service/internal/service/mailer (interfaces: IMailerService)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/mock_mailer_service.go -package=mocks loan-service/internal/service/mailer IMailerService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	mailer "loan-service/internal/service/mailer"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIMailerService is a mock of IMailerService interface.
type MockIMailerService struct {
	ctrl     *gomock.Controller
	recorder *MockIMailerServiceMockRecorder
	isgomock struct{}
}

// MockIMailerServiceMockRecorder is the mock recorder for MockIMailerService.
type MockIMailerServiceMockRecorder struct {
	mock *MockIMailerService
}

// NewMockIMailerService creates a new mock instance.
func NewMockIMailerService(ctrl *gomock.Controller) *MockIMailerService {
	mock := &MockIMailerService{ctrl: ctrl}
	mock.recorder = &MockIMailerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIMailerService) EXPECT() *MockIMailerServiceMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockIMailerService) Send(req *mailer.Request) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Send", req)
	ret0, _ := ret[0].(error)
	return ret0
}

// Send indicates an expected call of Send.
func (mr *MockIMailerServiceMockRecorder) Send(req any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockIMailerService)(nil).Send), req)
}
